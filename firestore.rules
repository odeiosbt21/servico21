rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Allow users to read and write their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow authenticated users to read other users' profiles (for browsing providers)
      allow read: if request.auth != null;
      
      // Allow unauthenticated users to read provider profiles (for browsing without login)
      allow read: if resource.data.userType == 'prestador' && resource.data.isProfileComplete == true;
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      // Allow authenticated users to read all reviews
      allow read: if request.auth != null;
      
      // Allow users to create reviews
      allow create: if request.auth != null && request.auth.uid == request.resource.data.clientId;
      
      // Allow users to update/delete their own reviews
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.clientId;
    }
    
    // Chats collection
    match /chats/{chatId} {
      // Allow participants to read and write chat data
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // Allow creating chats if user is one of the participants
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
    }
    
    // Chat messages subcollection
    match /chats/{chatId}/messages/{messageId} {
      // Allow participants to read and create messages
      allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Allow users to read and update their own notifications
      allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Allow creating notifications for any user (for system notifications)
      allow create: if request.auth != null;
    }
  }
}